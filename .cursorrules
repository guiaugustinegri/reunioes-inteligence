# Cursor Rules - Banco de Reuni√µes

## üé® Design System Obrigat√≥rio

Este projeto segue um sistema de design espec√≠fico inspirado em jornais cl√°ssicos e interfaces Windows antigas. **SEMPRE** siga estas regras:

### Paleta de Cores (OBRIGAT√ìRIO)
- **Preto Principal**: `#000` - Bordas, headers, texto principal
- **Branco**: `#fff` - Backgrounds, texto em fundos escuros  
- **Cinza Escuro**: `#111827` - Texto secund√°rio
- **Cinza M√©dio**: `#6b7280` - Texto terci√°rio, labels
- **Cinza Claro**: `#d1d5db` - Bordas secund√°rias
- **Cinza Muito Claro**: `#f9fafb` - Hover states
- **Background**: `#e5e7eb` - Fundo da p√°gina

### Tipografia (OBRIGAT√ìRIO)
```css
font-family: 'Courier New', 'Consolas', monospace, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
```

### Componentes Padr√£o

#### Bot√µes
```jsx
// Bot√£o Prim√°rio (branco com borda preta)
<button className="btn btn-primary">TEXTO</button>

// Bot√£o Success (preto)
<button className="btn btn-success">TEXTO</button>
```

#### Formul√°rios
```jsx
<div className="form-group">
  <label htmlFor="campo">LABEL</label>
  <input type="text" id="campo" className="form-control" />
</div>

<select className="select-filter">
  <option value="">Selecione...</option>
</select>
```

#### Tabelas (Estilo Jornal)
```jsx
<div className="table-compact">
  <div className="table-header">
    <div className="col-name">COLUNA 1</div>
    <div className="col-name">COLUNA 2</div>
  </div>
  <div className="table-row">
    <div className="col-name">Dado 1</div>
    <div className="col-name">Dado 2</div>
  </div>
</div>
```

### Regras de Estilo (OBRIGAT√ìRIAS)

1. **Bordas**: Sempre use `border: 2px solid #000` em containers principais
2. **T√≠tulos**: Sempre use `text-transform: uppercase` e `letter-spacing: 2px`
3. **Labels**: Sempre use `text-transform: uppercase` e `letter-spacing: 1px`
4. **Hover**: Sempre inverta cores (preto ‚Üî branco)
5. **Espa√ßamento**: Use o sistema: XS(8px), SM(12px), MD(16px), LG(24px), XL(32px)

### Estados Interativos
```css
/* Hover obrigat√≥rio */
.btn:hover {
  background-color: #000;
  color: #fff;
}

.nav-link:hover {
  background-color: #fff;
  color: #000;
}

.table-row:hover {
  background-color: #f9fafb;
}
```

## üö´ Proibi√ß√µes

- **NUNCA** use cores que n√£o estejam na paleta definida
- **NUNCA** use fontes diferentes de Courier New/Consolas
- **NUNCA** crie componentes sem bordas pretas de 2px
- **NUNCA** use t√≠tulos sem uppercase
- **NUNCA** adicione elementos decorativos desnecess√°rios

## ‚úÖ Checklist Obrigat√≥rio

Antes de criar qualquer componente, verifique:

- [ ] Usa apenas preto, branco e tons de cinza
- [ ] Aplica bordas de 2px em containers principais
- [ ] Usa text-transform: uppercase em t√≠tulos e labels
- [ ] Adiciona letter-spacing apropriado
- [ ] Implementa estados hover com invers√£o preto/branco
- [ ] Garante alto contraste para acessibilidade
- [ ] Usa a fonte Courier New ou Consolas
- [ ] Mant√©m consist√™ncia com componentes existentes

## üìÅ Estrutura do Projeto

- `src/components/` - Componentes React
- `src/services/` - L√≥gica de neg√≥cio e API calls
- `docs/` - Documenta√ß√£o (Design System, Backlog, etc.)
- `backups/` - Backups organizados por data
- `database/` - Scripts SQL

## üîß Tecnologias

- **Frontend**: React + Vite
- **Backend**: Supabase (PostgreSQL)
- **Estiliza√ß√£o**: CSS puro (sem frameworks)
- **Roteamento**: React Router

## üìã Padr√µes de C√≥digo

- Use `const` e `let` (evite `var`)
- Use arrow functions para callbacks
- Use template literals para strings
- Use destructuring quando apropriado
- Use async/await para opera√ß√µes ass√≠ncronas
- Sempre trate erros com try/catch

## üìö Documenta√ß√£o Obrigat√≥ria

### README.md - Sempre Atualizado
**REGRA CR√çTICA**: Sempre que implementar novas funcionalidades, modificar estrutura ou adicionar tecnologias, DEVE atualizar o README.md:

- ‚úÖ **Funcionalidades**: Adicionar novas funcionalidades na se√ß√£o apropriada
- ‚úÖ **Tecnologias**: Atualizar lista de tecnologias utilizadas
- ‚úÖ **Estrutura do Banco**: Adicionar novas tabelas e campos
- ‚úÖ **Navega√ß√£o**: Incluir novas rotas e p√°ginas
- ‚úÖ **Estrutura do Projeto**: Atualizar organiza√ß√£o de pastas
- ‚úÖ **Pr√≥ximos Passos**: Mover itens de "Em Desenvolvimento" para "Conclu√≠do"
- ‚úÖ **Caracter√≠sticas**: Adicionar novos recursos implementados

### Checklist de Atualiza√ß√£o do README
Antes de finalizar qualquer implementa√ß√£o:

- [ ] Funcionalidade adicionada na se√ß√£o correta
- [ ] Tecnologias atualizadas (se aplic√°vel)
- [ ] Estrutura do banco reflete mudan√ßas
- [ ] Rotas de navega√ß√£o atualizadas
- [ ] Estrutura de pastas documentada
- [ ] Pr√≥ximos passos reorganizados
- [ ] Caracter√≠sticas atualizadas
- [ ] Exemplos de uso (se necess√°rio)

### Organiza√ß√£o da Documenta√ß√£o
- **README.md**: Documenta√ß√£o principal do projeto (sempre atualizada)
- **docs/**: Documenta√ß√£o t√©cnica detalhada
- **backups/**: Backups organizados com documenta√ß√£o pr√≥pria
- **.cursorrules**: Regras para Cursor AI (incluindo esta regra de documenta√ß√£o)

### Regra de Manuten√ß√£o
**SEMPRE** que implementar algo novo:
1. Implementar a funcionalidade
2. Atualizar README.md imediatamente
3. Atualizar documenta√ß√£o em docs/ se necess√°rio
4. Criar backup se for mudan√ßa significativa
5. Atualizar .cursorrules se necess√°rio

## üéØ Objetivo do Projeto

Sistema para gerenciar reuni√µes com:
- Resumos autom√°ticos via LLM
- Agrupamento em s√©ries/projetos
- An√°lise de progress√£o
- Compartilhamento com clientes
- Visual de "ata cont√≠nua" profissional

---

**IMPORTANTE**: Este design system √© OBRIGAT√ìRIO. Todos os componentes devem seguir exatamente estas regras para manter a consist√™ncia visual do projeto.
